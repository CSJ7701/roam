:PROPERTIES:
:ID:       b1a8d451-fc98-409f-9287-9d56d8696495
:ROAM_ALIASES: "Microsoft Azure"
:END:
#+title: AZ-900 Azure Fundamentals
#+filetags: :Cloud:Azure:
#+related: [[id:978dd04c-79e3-4153-9efc-54a03c0935ab][Microsoft Internship]]


* What is Azure?

[[https://azure.microsoft.com/en-us/resources/cloud-computing-dictionary/what-is-azure/][Microsoft Azure]] is a cloud platform with tools for building, hosting and running applications.
It is a compilation of a large number of products and services.

Provides web services, virtual machines, remote storage, database hosting, and centralized account management.
* Describe Cloud Concepts
Cloud computing is the delivery of computing services over the internet.
This includes virtual machines, storage, databases, and networking. This also makes it easier to work with things like Machine Learning and Artificial Intelligence.
** Identify the Benefits of Cloud Computing - [[https://youtu.be/VaMdHKJQ15c&t=16m16s][video]]
What is the cloud?
- /There's no such thing as the clound, its just someone else's PC/

"On Premises" or on location (On the physical hardware), there is a certain amount of capacity. This can refer to CPU, storage, RAM, or a variety of other factors that limit a computer's performance.
That hardware runs [[id:b1295ee7-b785-4ee9-8b32-fa4541b05860][OS Services]], which are typically hosted on virtual machines or containers.
Applications are run on top of those services.

While the cloud technically is just someone else's computer that is hosting all of this information, it can more accurately be described as the set of management software and the user experience that helps the developer/user configure and setup the applications that are meant to run on the "cloud".

Structurally, the cloud is nothing more than capacity hosted in datacenters, which host services and applications. These services and applications are diverse, from virtual machines, to artificial intelligence, to machine learning, to frontend applications. A defining feature of this cloud architecture is that the user pays for the services or applications that they use. As opposed to a local server, these resources are accessed via the internet (many enterprise companies use a VPN or a physical connection instead, for security).

This allows easy, convenient access. There is no need to manage updates on the local end, since the cloud provider is constantly updating and 'innovating' for you. You essentially delegate the responsibility of software management to the cloud provider.

Key Benefits:
- Convenience (Constantly available, with minimal low-level management)
- Agility (Easy to jump between a wide range of services quickly. Can drop services that are no longer useful and move to something completely different.)
- High Availability/Disaster Recovery (This refers to the ability to spread multiple instances of your software across several physical locations easily, which improves the '[[id:359ecef5-d719-42c5-ad37-cb98c627a603][Availability Zones]]' that are available to you. Resources are available when needed.)
- Scalability (It's easy to increase the resources available to you quickly, when you need them)
  Can scale vertically or horizontally. Vertical scaling - adding more CPU's to increase processing power. Horizontal Scaling - Creating more virtual machines or containers to meet increased demand.
- Adaptability (The load on your system will vary dynamically - the cloud allows your system to dynamically scale up or down based on the load)

** CapEx, OpEx and Consumption-based - [[https://youtu.be/WiwV9wb0GMo&t=7m13s][video]]
Capital Expenditure vs Operational Expenditure

Capital Expenditure - Purchasing an asset upfront. This can refer to buying a PC and using that to host things yourself. You make a purchase, and now need to use that item for a certain amount of time to make the purchase worthwile.
Operational Expediture - Purchasing an asset as it is used. This is usually used in cloud services.

OpEx enables corporations to exercise more flexibility in environments where technology is constantly evolving. It is dangerous to exercise CapEx; purchasing an item or asset; since that asset may be outdated before you have used it enough to earn your money back.

OpEx is consumption based, which makes it more economic for small companies as they grow, rather than standing up a large amount of hardware/licenses/software in a companies infancy. This also allows a company to grow and expand, paying for more resources as they make more money and increase their volume.
** Differences Between Cloud Service Categories - [[https://youtu.be/IqQC1EOQqeU&t=15m16s][video]]
In any given situation, there are certain things that the company is responsible for, certain things that a user is responsible for, and certain things that Azure (or other cloud provider) is responsible for.

This is known as Shared Responsibility.

These things can vary depending on the service in question.

This is typically visualized with a stack, from low-level to high level:
- Storage
- Network
- Compute
- Hypervisor (Virtual Machine)
- OS
- Runtime (Program or language, think Java)
- Application
- Data

  If you are running this stack yourself/on premises (so, on a local machine), then you are responsible for all of this.
  
  One cloud model is known as [[id:f63302e7-65b9-4fc0-a596-9ec269496756][Infrastructure as a Service]] or [[id:f63302e7-65b9-4fc0-a596-9ec269496756][IaaS]]. This model places Hypervisor, Compute, Network, and Storage under the cloud providers responsibility, while the customer takes responsibility for the rest. Even though the OS and the higher level tasks are the customers /responsibility/, there are extensions and tools within Azure to assist. For example, since the OS is the customer's responsibility, they are responsible for organizing regular backups. Azure has tools to set that up, and the storage to put it. This is the most flexible option (in the cloud), but includes the most responsibility for the user.

  Another model is known as [[id:a5bba4de-a947-4102-ad96-d62c91f8cd0b][Platform as a Service]], or [[id:a5bba4de-a947-4102-ad96-d62c91f8cd0b][PaaS]]. This model /can/ include VM's (doesn't have to), but the user does not interact with them. In this model, Azure takes responsibility for everything except the Application and its Data. With this type of model, there are different "flavors" - since different applications will require different architecture to build upon. This is all a sort of "menu option" though - so the customer could choose a "Kubernetes based PaaS", or an "Web based PaaS" depending on what they need. This provides substantially limited options compared to IaaS - will only support a limited number of OS's, will not provide root access to the OS, etc.

  The last model is known as [[id:7e8921c2-9444-48c0-b5e2-29f374674c44][Software as a Service]] or SaaS. This is less of an "Azure" function, and something much closer to Office365, where the service is the actual application. The customer can only /use/ the system that they pay for. They are responsible for absolutely nothing.

  When using a cloud provider, you will /always/ be responsible for:
  - the information and data stored in the cloud
  - Devices that are allowed to connect to your cloud
  - Accounts and identities of the people/services/devices in your organization


The provider is always responsible for:
- The physical datacenter
- The physical network
- The physical hosts


Your service model determines responsibility for:
- Operating Systems
- Network Controls
- Applications
- Identity and Infrastructure
** Identify the Right Service Type - [[https://youtu.be/KH8NH76h2vc&t=4m1s][video]]
Recall from the [[*Differences Between Cloud Service Categories - \[\[https://youtu.be/IqQC1EOQqeU&t=15m16s\]\[video\]\]][previous lesson]] the idea of [[id:f63302e7-65b9-4fc0-a596-9ec269496756][IaaS]], [[id:a5bba4de-a947-4102-ad96-d62c91f8cd0b][PaaS]], and [[id:7e8921c2-9444-48c0-b5e2-29f374674c44][SaaS]]. How do we apply these ideas, and why?

The idea would be to use "Software as a Service" as much as possible, because it significantly reduces the amount of responsibility (and therefore work, time and money) that are assigned to "you", as the company purchasing use of a service. If the client needs to create their own application or develop/host their own platform or solution, but doesn't have any particular requirements for a custom environment, then PaaS (Platform as a Service) would be most applicable. An example of this would be a web server or any other web based application. If the client needs to adjust certain parameters of the operating system or environment (such as a virtual machine), then they would likely need Iaas or Infrastructure as a Service. This would apply for a Docker Image or Kubernetes Cluster.
** Differences Between Types of Cloud Computing - [[https://youtu.be/7dlCrF2wmXU&t=12m41s][video]]
Key Principles of the Cloud:
- Pooling Resources: Capacity and Hardware capabilities are shared among different users. This is much more efficient for a variety of users. 
- Self Service: There is a reduced need for administrator oversight on hardware resources. Reduces the technical overhead for accessing resources ("anyone" can now create a VM)
- Visibility: Easy to access information like usage and telemetrics.


*Public Cloud*
- Azure would be an example of a public cloud.
- This is true OPEX - only paying for what you use.
- Offered over the internet
  - Limitless
  - Many different regions that are available
  - Many different services


*Private Cloud*
- On Premises, located on physical servers
- Typically will be based on some kind of private hypervisor
- Software to manage access and expose content to the end user.
- Business units may experience this as OPEX, where they have a quota and pay as they use, but the COMPANY that runs this private cloud experiences this as CAPEX, since they are in the hole for the cost of the services.
- Azure provides the ability for a company/client to host Azure solutions on a local, private stack. This provides the benefits of Azure's public cloud with the security and configuration of a private cloud.


*Hybrid Cloud*
- This is a mix of private and public cloud.
- Will typically operate as a private solution, but during periods of high traffic or extreme demand, may expand and reach out to the public cloud for resources and information.
- Allows for a backup in the event of failure.
- This is especially useful for companies with a solution or application that can't be hosted in the cloud. These companies may want to move the majority of their operations to Azure or some other cloud provider, but may be /anchored/ by that one applicaiton or service.


*Multi Cloud*
- User employs multiple public cloud providers
- This allows you to use different features from different providers


Azure Arc is a set of technologies that helps manage your cloud environment.
Azure VMware Solution can run VMware workloads in Azure.
** Reliability and Predictability - [[https://youtu.be/kD2YqdDaO1w&t=7m16s][video]]
*Reliability*
The ability of a system to recover from failure and continue to function.

- Auto-Heal - The cloud is still based off hardware. Nodes/Racks etc can fail and have issues. The cloud is configured to "auto-heal", where is a single drive or rack fails, then anything deployed on that drive is redeployed to a different node.
- Storage - At any given time, there will always be 3 copies of a user's data.
- Autoscaling - Azure provides the option to automatically scale your resources to match demand. This ensures that your application or service will not fail when placed under heavy load.
- Service Level Aggreement - Commitment from azure to back up the service that it provides the user.
- Design for Failure - Azure allows the user to choose certain options that can improve their recovery time and increase the security of the users data, such as spreading that data over multiple regions.
- Monitor - Azure allows the user to set up alerts and monitors to watch the application, in case there is an issue in the actual application or service that the user is hosting.


*Predictability*

- SKU - Azure has various products that are categorized based on performance, dimensions, and capabilities. This makes it easy to choose the correct product.
- Behavior - Azure provides a serious of predictable information and peripherals that make it easier to interact with azure services easily and consistantly. This includes predictable pricing, product templates, API's, etc.
- Use Templates - on the user side to improve the consistancy of the products that the user deploys.
- Automation - Can improve the consistancy of repeatable operations. Removes margin for human error.


Azure provides methods to manage a cloud environment and its resources in a secure, predictable manner using:
- A web portal
- A command line interface
- API's
- Powershell
* Describe Core Azure Services
In general, Azure consists of Physical Infrastructure, and Management Infrastructure. Azure's physical infrastructure consists of datacenters and the servers that they contain. Datacenters all have their own cooling, power, and networking. Data-centers themselves are not individually available, they are instead grouped into Azure Regions or Availability Zones that help the user access data.
** Benefits and Usage of Regions and Region Pairs - [[https://youtu.be/4RjPOAN54AE&t=13m8s][video]]
A region - a geographical area that contains at least one but potentially multiple datacenters. These datacenters are located nearby and networked together with a low-latency network.

Availability Zones provide a measure of extra security and resiliency.
In the event of a multiple zone outage where an entire region is affected, Azure provides the option for Region Pairs.
Most Azure Regions are matched/paired with another region at least 300 miles away. In the event of a region-wide catastrophe/outage, information from the affected zone can be accessed from the other member of the pair.
Not all Azure services are available for this type of redundancy.

Azure also provides "Sovereign Regions", which are isolated from the main instance of Azure. These include Government instances for the DoD and other countries like China.
** Benefits and Usage of Availability Zones - [[https://youtu.be/h0enGb17lnw&t=8m41s][video]]
Availability Zones are physically separate datacenters within an Azure Region. Each availability zone is made up one or more datacenters, with independent power, cooling, and network. These availability zones are set up to be "isolation boundaries" - redundancies, so that if one goes down, the others can continue to function. Essentially, the country is broken into regions. These regions are made up of availability zones. Each availability zone contains one or more datacenters. There are at least 3 availability zones within each region.

Azure allows you to duplicate your application across multiple availability zones. There may be an extra cost to this.
Availability zones work best with self contained services, such as VM's, Databases, disks, etc. Azure services that support availability zones fall into three categories:
- Zonal Services: Pin the resource to a specific zone (VM's, Disks, IP addresses)
- Zone Redundant Services: The platform replicates automatically across zones. (Zone redundant storage, SQL database)
- Non Regional Services: Services are always available.
  
** Benefits and Usage of Resource Groups - [[https://youtu.be/g6thrYZhPZY&t=9m38s][video]]
Resources are the basic building blocks of Azure. /Anything/ that you can create, provision, deploy, etc is a resource.
VM's, virtual networks, databases, cognitive services, etc - all resources.

Resource groups are exactly what they sound like - groupings of resources.
Whenever you create a resource, you are required to place it into a resource group. Groups can contain many resources, but a resource can only be placed in one group.
Groups are primarily organizational, but provide some management features - when you apply an action to a group, it will be applied to all resources in that group, etc. 
** Benefits and Usage of Subscriptions - [[https://youtu.be/9vKAYW_WkLo&t=8m19s][video]]
Subscriptions are a unit of management, billing, and scale. While resource groups allow you to logically organize resources, subscriptions allow you to logically organize resource groups and facilitate billing.
In order to use Azure, you need a subscription. This authenticates your access to products and services. Subscriptions are directly associated with an account, which belongs to a microsoft Entra ID.
One account can have multiple subscriptions, but it's only required to have one.

In a multi-subscription account, you can organize different billing models based on subscription and apply different access policies. This is known as applying /subscription boundaries/.
- Billing Boundary - This subscription type determines how an account is billed for using Azure. You can create multiple subscriptions for different types of billing requirements. Azure will generate separate billing reports and invoices for each account.
- Access Control Boundary - Azure applies different access-management policies based on subscription. You can create multiple subscriptions based on the organizational structures that you need.


You can use additional subscriptions to manage separate:
- Environment - This allows separation for development, testing, security, or to isolate data.
- Organizational Structures - Organizing different teams based on structure is something that additional subscriptions makes easy.
- Billing - Especially useful for itemized tracking, and maintaining records of different expenses.
** Benefits and Usage of Management Groups - [[https://youtu.be/bPdDiEtCVhM&t=6m30s][video]]
Resources are compiled into resource groups, and resource groups are gathered into subscriptions. This provides a reasonable amount of compartimentalized organization, but for those who need to organize multiple applications, multiple development teams, across multiple parts of the world/country, Azure provides management groups.

These allow the user to manage a scope above the subscription level, efficiently managing access, policies, and compliance for multiple subscriptions. They have the same relationship to subscription that resource groups do to resources - a management group contains multiple subscriptions, and allows the user to perform an action on multiple subscriptions at once. Unlike resource groups or subscriptions, management groups can be nested.

Examples for using management groups:
- Create a hierarchy that applies a policy
  This would allow you to create a group called Production, for example. In this group, you could limit VM locations to the Western US, which will inherit onto all subscriptions managed by that group
- Provide User access to multiple Subscriptions
  By moving multiple subscriptions under a management group, you can create one Azure Role Based Access Control (Azure RBAC) assignment on the management group. This means that all resource groups, subscriptions, etc that are managed by the group inherit those permissions. This enables user to have access to everything they need, rather than repeating this setup across multiple subscriptions.
** Benefits and Usage of Azure Resource Manager - [[https://youtu.be/g4u0NL2-3XM&t=9m57s][video]]

** Describe the Purpose of Azure Arc - [[https://youtu.be/cW6_rvDYSHg&t=7m23s][video]]

** Describe the Resources Required for Virtual Machines - [[https://youtu.be/PP5BWZ0cAJo&t=6m17s][video]]
Azure allows users to create and use [[id:61d1153b-3d2a-4e72-babc-1969c1849005][Virtual Machine]]s in the cloud. These VM's provide [[id:f63302e7-65b9-4fc0-a596-9ec269496756][IaaS]] in the form of a virtualized server.
This is an ideal choice when you need to:
- Take control of your OS
- Run custom software
- Use custom hosting configurations
  
Using a preconfigured VM image allows you to set up new VM's in minutes.

You can choose to run a single VM for testing or development, or group VM's together to improve availability, scalability, and redundancy.

*VM Resources*
- Size - depends on the purpose, number of processor cores and RAM (On the hardware)
- Storage - HDD, SSD, etc
- Networking - Virtual Network, Public IP, port configuration
** Benefits and Usage of Core Compute Resources - [[https://youtu.be/yKDSAYDLGrI&t=34m32s][video]]
*** Virtual Machines
*Virtual Machine Scale Sets*
Allows you to create/manage a group of identical, load-balanced VM's.
Normally, achieving this would require individual configuration for each VM, which is complicated and time consuming.
Using a scale set somplifies this process, since Azure does the majority of the configuration. This allows the user to manage, configure, and update a large number of VM's from a central location.
The number of VM instances can automatically increase or decrease depending on demand, or can scale on a defined schedule.
Scale sets also deploy a load balancer automatically, to ensure that resources are used efficiently.

*Virtual Machine Availability Sets*
Designed to ensure that VM's stagger updates and vary their power and network connectivity. This helps to prevent you from losing all of your VM's from a single power or network failure.
They can group your VM's in two ways:
- Update Domain: groups VM's that can be updated at the same time. Allows you to apply updates knowing that you won't experience downtime.
- Fault Domain: groups VM's by common power source and network switch. This will split your VM's across three "fault domains".
There is no cost for configuring an availability set - you only pay for VM's that you create.

*When to use a VM*
- Testing and Development - quick and easy way to create a different OS and application configuration. Easy to delete when no longer needed.
- Running applications in the cloud
- Extending your datacenter to the cloud - can extend the capabilities of OnPrem equipment
- Disaster recovery - Can serve as a backup for a primary datacenter.



*** Containers
Virtual machines can only run one operating system at a time. If you want to reduce costs and run more than one operating system, you can use a [[id:fc405762-7673-4e69-9875-5241adcc1843][Container]].
Containers are a virtualized environment, similar to a VM, but in a container you do not manage the operating system. Where virtual machines appear as an instance of an operating system that you can connect to and directly manage, containers are a higher level, /more/ virtualized solution. VM's virtualize hardware and allow the user to interact with an OS on this "fake" hardware. Containers virtualize an OS and allows users to interact with an application on this "fake" operating system.

*Azure Container Instances*
- Fastest and Simplest way to run a container in Azure.
- No need to manage VM's or adopt additional services
- PaaS service


*Azure Container Apps*
- Similar to a container instance
- Running immediately, no need for container management
- PaaS
- Extra Benefits - load balancing and scaling


*Azure Kubernetes Service*
- Container orchestration service
- Manages the lifecycle of containers
- Makes deploying a fleet of containers much simpler


Containers are useful for micro-service architectures, where the user divides solutions into smaller independent pieces.
An example could be splitting a web-site into a container hosting the front-end, another hosting the back-end, and a third for storage.
In a situation where the web-site reaches storage capacity, but neither front-end nor back-end are stressed, you could simply scale the storage container.

*** Azure App Services
App services are another hosting option that Azure provides .
They allow you to build and host web apps, background jobs, mobile backends, and RESTful API's in the programming language of your choice without managing infrastructure (like you would have to with a VM).
It offers automatic scaling and high availability, supporting both Windows and Linux. It enables automated deployment from Github, Azure DevOps, or any Git repo.

Functionally, this is an HTTP-based service that can host web apps, REST APIs and mobile backends, supporting multiple languages (.NET, .NET Core, Java, Ruby, NodeJS, PHP, or Python) either Windows or Linux.

You can host a variety of app service styles:

*Web Apps*
Host web apps using ASP.NET, ASP.NET Core, Java, Ruby, Node.js, PHP, or Python in either widows or Linux.

*API Apps*
Can build REST API's using choice of language and framework. Full swagger support and the ability to publish and package your API in Azure Marketplace. Produced apps can be consumed from any HTTP or HTTPS client.

*WebJobs*
Can run a program (.exe, Java, Python, or NodeJS) or script (.cmd, .bat, PowerShell,  Bash) in the same context as a web app, API app, or mobile app. Can be scheduled or run on a trigger. Typically used as background tasks in application logic.

*Mobile Apps*
Quickly build a backend for iOS or Android apps.
- Store mobile app data in a cloud based SQL database
- Authenticate customers against common social providers (MSA, Google, Twitter, Facebook)
- Push notifications
- Execute custom backend logic in C# or NodeJS.
Includes SDK support for native iOS, Android, Xamarin, and React native apps.

** Benefits and Usage of Core Network Resources - [[https://youtu.be/aNK0C9Oj2sg&t=22m4s][video]]
*** Virtual Networks
Virtual networks and subnets allow Azure resourecs (VMs, web apps, databases, etc) to comunicate with each other, users on the internet, and with on-premises client computers. Think of an azure network as an extension of your on-premise network, with additional resources that allow it to connect to other azure resources.

Provide key capabilities:
- Isolation and segmentation
- Internet communication
- Communicate with azure resources
- Communicate with on-premises resources
- Route network traffic
- Filter network traffic
- Connect virtual networks

Supports both public and private endpoints, enabling communication between external /and/ internal resources with other internal resources.
- Public endpoints have public IP and can be accessed from anywhere in the world
- Private endpoints exist within a virtual network and have a private IP from within the address space of that network.


*Isolation and Segmentation*
Azure Virtual Networks allow you to create multiple isolated virtual networks. The IP range you define at configuration exists only within the virtual network, and is not visible to external devices. Think of this as an enterprise level [[id:4f5147d7-5d15-4478-9567-dcd1b7ee1454][NAT]].
Using this service creates ip address spaces that are divided into named subnets. For name resolution you can use the name resolution service built into Azure, or you can configure an external [[id:2d63cf7f-d5f0-44ce-a0c5-f277be13de71][DNS]] server.
You can enable public internet connection by assigning a public IP address to an Azure resource, or putting the resource behind a public load balancer.

*Communicate Across Azure Resources*
Azure resources can communicate with virtual networks in one of two ways:
- Virtual networks can connect to VMs and other Azure resources, such as the App Service Environment for Power Apps, [[*Containers][Azure Kubernetes Service]], or [[*Virtual Machines][Virtual Machines Scale Sets.]]
- Service Endpoints can connect to other Azure resource types, such as Azure SQL Database and storage accounts. This approach enables you to link multiple azure resources to virtual networks to improve security and provide optimal routing among resources.


*Communicate with On-Premises Resources*
You can, in effect, create a network that spans both local and cloud environments. There are three ways to achieve this:
- Point-to-Site VPN connections are from a computer outside your organization back into your corporate network. In this case, the client computer initiates an encrypted VPN connection to connect to the Azure virtual network.
- Site-to-Site VPNs link your on-premises VPN device or gateway to the Azure VPN gateway in a virtual network. In effect, the devices on Azure can appear as being on the local network. The connection is encrypted add works over the Internet.
- Azure ExpressRoute provides a dedicated private connection to Azure that doesn't travel over the internet. ExpressRoute is useful for environments where you need greater bandwidth and even higher levels of security.

*Route Network Traffic*
Azure routes traffic between subnets on any connected virtual networks, on-premises networks, and the internet. This is done by default, but you can manually control the routing and override default settings.
- Routing Tables allow you to define rules about how traffic should be directed. You can create custom routing tables that control how packets are directed between subnets.
- [[id:81e5cabc-1177-433a-8bfa-67f0cf6a2027][Border Gateway Protocol]] (BGP) works with Azure VPN gateways, Azure Route Server, or Azure ExpressRoute to propagate on-premises BGP routes to Azure virtual networks.

*Filter Network Traffic*
Azure Virtual Networks allow you to filter traffic between subnets (firewall) using the following approaches:
- Network security groups are Azure resources that contain multiple inbound and outbound security rules. You can define these rules to allow or block traffic based on factors such as source/destination IP, port, and protocol.
- Network virtual appliances are specialized VMs that can be compared to a hardened network appliance. A network virtual appliance carries out a particular network function, such as running a firewall or performing a wide area network (WAN) optimization.

*Connect Virtual Networks*
You can link virtual networks together using virtual network peering. Peering allows two virtual networks to connect directly to each other. Network traffic between two peered networks is private, and travels on the Microsoft backbone network, never entering the public internet. Peering enables resources in each virtual network to communicate with each other. These virtual networks can be in separate regions, which allows you to create a global interconnected network through Azure.
User Defined Routes (UDR) allows you to control the routing tables between subnets within a virtual network or between virtual networks.

*** Virtual Private Networks
[[id:5989050f-04aa-415c-b409-dd9aa1369c02][Virtual Private Network]]s use an encrypted tunnel within another network. VPN's are typically deployed to connect two or more trusted private networks together over an untrusted network. Traffic is encrypted while traveling over the untrusted network in order to prevent eavesdropping or other attacks. VPN's can enable networks to safely share sensitive information.

*VPN Gateways*
A VPN gateway is a type of virtual network gateway. Azure VPN Gateway instances are deployed in a dedicated subnet of the virtual network, and enable:
- Connect on-premises datacenters to virtual networks (Site to Site)
- Connect individual devices to virtual networks (Point to Site)
- Connect virtual networks to other virtual networks (Network to Network)

All data transfer is encrypted. You can deploy only one VPN gateway in each virtual network. You can use one gateway to connect to multiple locations though, including other virtual networks or on-premises datacenters.

VPN gateways can either be policy based or IP based. The main difference is how they determine which traffic should be encrypted. In Azure, regardless of the type, authentication uses a pre-shared key.
- Policy based VPN gateways specify the static IP address of packets that should be encrypted through each tunnel. This evaluates every single packet against the set of specified IP.
- Route based gateways model IPSec tunnels as network interfaces or virtual tunnel interfaces. IP routing (either static or dynamic) decides which one of these interfaces to use when sending each packet. Route based VPN's are the preferred connection method for on-premises devices, as they are more resistant to topology changes such as the creation of new subnets.

Use a route based VPN gateway if you need these types of connectivity:
- Connections between virtual networks
- Point-to-site connections
- Multi-site connections
- Coexistence with an Azure ExpressRoute gateway

*High Availability*
Ways to maximize the resiliency and availability of a VPN gateway.

- Active/Standby
  VPN gateway instances are deployed in active/standby configuration by default. When planned maintenance or unplanned disruption affects the active instance, the standby instance automatically assumes the responsibility for connections (no user intervention). Connections are interrupted during the transition, but typically restored within a few seconds for planned maintenance, or within 90 seconds for unplanned disruptions.
- Active/Active
  Support for BGP routing protocol allows users to deploy VPN gateways in active/active configuration. Each instance gets assigned a unique IP address, where the user creates separate tunnels from the on-premises device to each IP address. This extends high availability by deploying an additional VPN device on-premises.
- ExpressRoute Fail-over
  It is possible to configure a VPN gateway as a secure failure path for ExpressRoute connections. ExpressRoute circuits have resiliency built in, but aren't immune to physical problems that affect the cables delivering connectivity, or outages that affect the entire location. If you need high availability, you can configure a VPN gateway that uses the internet as an alternate means of communication, which ensures that there is always a connection to your virtual networks.
- Zone Redundant Gateways
  In regions that support availability zones, VPN gateways and ExpressRoute gateways can be deployed in a zone redundant configuration. This improves resiliency, scalability, and availability. Deploying gateways in availability zones physically /and/ logically separates gateways within a region while protecting your on-premises connectivity from zone-level failure. These gateways require different SKU (stock keeping units), and use 'Standard' public IPs instead of 'Basic' public IPs.


*** Azure ExpressRoute
Lets you extend on-premises networks into the cloud over a private connection. This connection is called an ExpressRoute Circuit.
Connectivity can be from an 'any-to-any' network (IP, VPN), an 'point-to-point' ethernet network, or a virtual cross-connection through a connectivity provider at a colocation facility. Connections offer more reliability, faster speeds, consistent latency, and higher security than typical internet connections.

*Features and Benefits*
- Connectivity to microsoft cloud services across all regions in the geopolitical area
- Global connectivity to microsoft services across all regions with ExpressRoute Global Reach
- Dynamic routing between your network and Microsoft via Border Gateway Protocol
- Built-in redundancy in every peering location for higher reliability

*Connectivity to Cloud Services*
- Office 365
- Dynamics 365
- Azure compute services (VM's etc)
- Azure cloud services (Azure Cosmos DB, Azure Storage, etc)
Available in all regions

*Global Connectivity*
Can enable ExpressRoute to exchange data across your on-premises sites by connecting your ExpressRoute circuits. If you had an office in Asia, datacenter in Europe, both with ExpressRoute circuits connecting them to the Microsoft network. Could use ExpressRoute Global Reach to connect those two facilities, allowing them to communicate without transferring data over the public internet.

*Dynamic Routing*
ExpressRoute uses the BGP. BGP is used to exchange routes between on-premises networks and resources running in Azure. This protocol enables dynamic routing between your on-premises network and services running in the Microsoft cloud.

*Built In Redundancy*
Providers use redundant devices to ensure that connections established with Microsoft are highly available. Can configure multiple circuits to complement this feature.

*Connectivity Models*
Supports 4 models to connect on-premises network to the cloud:
- CloudExchange Collocation
  Co-location refers to your datacenter, office, or other facility being co-located at a cloud exchange (such as an ISP). If your facility is co-located, you can request a virtual cross-connect to the Microsoft Cloud
- Point-to-Point Ethernet connection
  Can directly connect your facility to the Microsoft Cloud
- Any-to-Any connection
  Can integrate your WAN with Azure by providing connections to your offices and datacenters. Azure integrates with your WAN, providing connections to your offices and datacenters. This means that the connection between your on-premises network and Azure is similar to a connection that you might have between your datacenter and branch offices. 
- Directly from ExpressRoute sites
  Can connect directly to Microsoft's global network at a peering location, distributed across the world. Provides dual 100 Gbps or 10 Gbps connectivity, which supports Active/Active connectivity at scale.


*** Azure DNS
Azure DNS is a hosting service for DNS domains. It provides name resolution using Azure infrastructure. You can manage your DNS records using the same credentials, APIs, Tools, and billing as your other Azure services.

*Benefits*
- Reliability and Performance
  Hosted on Azures global network of DNS name servers. Provides resiliency and high availability. Azure DNS uses anycast networking, so each DNS query is answered by the closest available DNS server to provide fast performance and high availability for your domain. 
- Security
  Azure DNS is based on Azure Resource Manager. Provides features like Role Based Access Control, Activity Logs, Resource Locking.
- Ease of Use
  Can manage DNS records for Azure services, and provide DNS for external services as well. Integrated into the Azure portal and uses the same credentials, support contract, and billing as your other Azure services. Since the DNS runs on Azure, you can manage domains and records with the Azure portal, PowerShell cmdlets, and Azure CLI. Can also integrate with other services using REST APIs and SDKs.
- Customizable virtual networks
  Supports private DNS domains. Allows you to use your own custom domain names in your private virtual networks, rather than using the Azure provided names. 
- Alias records
  Supports alias record sets. Can use an alias record set to refer to an azure resource, such as an Azure public IP address, Traffic Manager Profile, or Content Delivery Network endpoint. If the IP address of the underlying resource changes, the record set updates itself during DNS resolution. The alias record set points to the instance and the service instance is associated with an IP address.

*NOTE*: you cant use Azure DNS to buy a domain name. For an annual fee, you can buy a domain name using app service domains or a third-party domain name registrar. Once purchased, your domain names can be hosted in Azure DNS for record management. 

** Describe Public and Private Endpoints - [[https://youtu.be/bPNkXwRFsek&t=7m23s][video]]
** Benefits and Usage of Storage Account Resources - [[https://youtu.be/b8BrfsxLSx8&t=18m4s][video]]
Storage accounts provide a unique namespace for azure storage data. Accessible anywhere in the world over HTTP or HTTPS.
There are several account types to choose from:
- Standard General-Purpose
  Supported Services: Blob Storage, Queue Storage, Table Storage, Azure Files
  Redundancy Options: GRS, LRS, RAGRS, ZRS, GZRS, RAGZRS
  Usage: Standard account type for blobs, files, shares, queues, tables. Recommended for most scenarios with Azure Storage. For Network File Share, use the premium account type.
- Premium Block Blobs
  Supported Services: Blob Storage
  Redundancy Options: LRS, ZRS
  Usage: Premium account type for block blobs and append blobs. Good for high transaction rates, smaller objects, or consistently low storage latency
- Premium File Shares
  Supported Services: Azure Files
  Redundancy Options: LRS, ZRS
  Usage: Premium storage account for file shares /only/. Recommended for enterprise/high performance scale applications. Us this if you want a storage account that supports both Server Message Block and NFS File Shares.
- Premium Page Blobs
  Supported Services: Page Blobs
  Redundancy Options: LRS
  Usage: Premium storage account that is only used for page blobs.

One of the primary benefits for Azure Storage is the unique namespace that it provides. Every storage account in Azure must have a unique name, where the combination of that name and the Azure endpoint creates your domain namespace.
Naming rules:
- between 3 and 24 characters, numbers and lowercase letters only.
- Account name must be unique within Azure.

*** Azure Storage Redundancy*
Azure always stores multiple copies of your data so that it is backed up in case of emergency.
Choosing a redundancy option is a function of cost vs functionality/availability. Some factors include:
- How data is replicated in the primary region
- Whether data is replicated to a second region that is geographically distant
- Whether application requires read access to the replicated data in the secondary region (if the primary region becomes unavailable)

*Redundancy in the primary Region*
- Locally Redundant Storage
  Replicates your data 3 times a year within a single data center in the primary region. LRS provides at least 99.999999999% durability of objects over a given year.
  This is the lowest cost option, and offers the least durability compared to other options. LRS protects against hardware and potentially network failures, but does no protect against natural disasters or anything that will affect the entire datacenter.
- Zone Redundant Storage
  Replicates Storage data synchronously across 3 azure availability zones in the primary region. Provides at least 99.9999999999% durability over a given year.
  Data is still accessible for read and write operations if a zone becomes unavailable. No remounting is necessary on the clients part. If a zone becomes unavailable, Azure will update network settings which may affect the application if you attempt to access data before the update is complete. Recommended for high availability.
- *Redundancy in a second region*
  Bet for high durability. Can additionally copy your data to a secondary region that is at least 100 miles away from the primary region. This ensures that data is durable even in the event of a region-wide disaster.
  The secondary region is based on the region pair for your primary region, and cannot be changed. There are 2 types of redundancy within this category:
  - Geo-Redundant Storage (GRS)
    Essentially running LRS in two regions.
  - Geo-Zone-Redundant Storage (GZRS)
    Essentially running ZRS in the primary region and LRS in the secondary.
  By default, the data in the secondary region is /not/ available for read or write unless the primary region fails.
  Since data is replicated Async, a failure that affects the primary region may result in data loss if the primary region has unsynced data.
  
  *Geo Redundant Storage*
GRS copies data synchronously within a single physical location in the primary region using LRS. It then copies your  data asynchronously to a single physical location in the secondary region (zone pair) using LRS. GRS offers close to 99.99999999999999% durability per year.

*Geo Zone Redundant Storage*
GZRS combines the high availability of redundancy across zones with the regional protection provided by geo-replication. Data is copied across 3 Azure availability zones in the primary region (similar to ZRS) and is also replicated to a secondary region using LRS. This is recommended for maximum consistancy, durability and availability; it provides excellent performance and resilience.

*Read access in the secondary region*
GRS and GZRS replicate your data to another physical location. That data can only be read if the customer or MS initiate a fail-over from the primary to secondary region.
You /can/ enable read access to the secondary location, which lets you access the secondary location when the primary instance is running. This is denoted with 'RA-GRS' and 'RA-GZRS'.

*** Azure Storage Services
- Blobs: massively scalable object store for text or binary data. Supports big-data analytics
  Completely unstructured (which means it accepts any format). Uses tiers to specify different levels of access. Hot access (frequent access), Cool access (infrequent access and stored for at least 30 days), Cold access (infrequent and stored for at least 90 days), Archive access (rarely accessed and stored for at least 180 days). 
- Files: managed file share for cloud or on-premises deployment.
- Queues: messaging store for reliable messaging between application components. Can store messages up to storage limit. Typically used as a 'work backlog'. 
- Disks: Block-level storage for Azure VMs. Literally just a virtualized disk.
- Tables: NoSQL table option - structured, non relational data.

*Benefits*
- Durable and available - redundancy
- Secure - encrypted, with access control
- Scalable
- Managed - Azure handles hardware and critical issues
- Accessible - Can be accessed from anywhere over HTTP or HTTPS. Clients available in a variety of languages (.NET, Java, Python, Go, Ruby, etc) and a mature API. 
** Data Movement and Migration Options - [[https://youtu.be/jNBcXnMTo9s&t=11m47s][video]]
*** Azure Migrate
Helps you migrate from on premises to Azure. Unified platform with a range of tools. Integrates with other Azure services and independent options as well.
Is able to discover on-premises data storage, and migrate to Azure.
 - Discovery and assessment
 - Server Migration

*Data Migration Assistant*
Assesses SQL servrs to find potential migration issues. 

*Database Migration Service*
Helps move on-prem databases to Azure

*** Azure Data Box
Physical Migration Service.
You receive a physical 'box' that connects to your system and transfers data to Azure.
Ideal for scenarios wth limited network connectivity or large amounts of data (over 40 Tb).
Can also export data from azure.

*** AzCopy
CLI Utility for copying blobs/files to/from a storage account. Supports one way sync, and can work with other cloud providers.
*** Azure Storage Explorer
graphical app for managing files and blobs in Azure Storage. Uses AzCopy for back-end. 
*** Azure File Sync
Centralizes file shares in Azure files - maintains flexibility of a windows file server. Supports bi directional sync, multiple caches, cloud tiers. 

** Benefits and Usage of Azure Marketplace - [[https://youtu.be/b7RuB4Bymgc&t=3m12s][video]]

* Describe Core Solutions and Management Tools on Azure
** Benefits and Usage of Azure IoT Services - [[https://youtu.be/22z9ARaKlbU&t=21m8s][video]]
** Benefits and Usage of Big Data and Analytics Services - [[https://youtu.be/LSVewE4mKfE&t=13m26s][video]]
** Benefits and Usage of AI Services - [[https://youtu.be/lgcpRpV3HPc&t=9m21s][video]]
** Benefits and Usage of Serverless Technologies - [[https://youtu.be/-xeJGiMw5OE&t=6m54s][video]]
*** Azure Functions
Azure functions is an event-driven, serverless compute option. It does not require virtual machines or containers.
If you build an app with virtual machines or containers, those resources must be "running" in order to server your app.
With Azure Functions, an event will wake the function, which prevents resources from being provisioned when there are no events.

This is an ideal option when you are concerned /only/ with the code running your service and not with the underlying infrastructure. Functions are most commonly used to respond to an event (a REST request for instance, or timer, or a message from another azure service), and when that work can be completed quickly (a manner of seconds).

Functions scale automatically based on demand, so they are a good choice when the demand is variable.
When azure functions are finished running, they deallocate the resources that they used. You are only charged for the CPU time used while the function runs.

Functions can be stateless or stateful. Stateless functions (default) behave as though they are restarted every time they respond to an event. Stateful functions (Durable functions) use a context that is passed through the function to track prior activity.

These functions are a central component of serverless computing, but also server as a general compute platform for running any type of code. 
** Benefits and Usage of DevOps Technologies - [[https://youtu.be/-acpNiCa0qY&t=10m21s][video]]
** Functionality of Azure Management Solutions - [[https://youtu.be/6xp-K60ChAk&t=9m23s][video]]
** Functionality and Usage of Azure Advisor - [[https://youtu.be/nqH4NboyEl0&t=3m22s][video]]
** Functionality and Usage of ARM Templates - [[https://youtu.be/loxcA5MUf-I&t=6m41s][video]]
** Functionality and Usage of Azure Monitor - [[https://youtu.be/v68jL-l9Fww&t=10m20s][video]]
** Functionality and Usage of Azure Service Health - [[https://youtu.be/M1xPK4T4Vls&t=2m58s][video]]

* Describe General Security and Network Security Features
** Functionality of Microsoft Defender for Cloud - [[https://youtu.be/eWcoMi_nQt4&t=9m47s][video]]
Defender for Cloud: a monitoring tool for 'security posture management' and threat protection. Monitors your cloud, onprem, hybrid, and multi-cloud environments for guidance and notifications.

Natively integrated with Azure, seamless deployment and protection with no extra setup
Provides continuous assessment, security alerts, advanced threat protection, and recommendations

For resources that are outside of Azure (onprem), defender for cloud offers a Log Analytics Agent to gather data. This is extended to networks outside Azure using Azure Arc.

Detect threats across:
- PAAS - app service, Azure SQL, Storage Account
- Data Services - automatically classify data. Get assessments for potential vulnerability across SQL and storage.
- Networks - Limit exposure to brute force attacks.

Other Servers:
- CSPM (protect AWS)
- Defender for Containers
- Defender for Servers
** Functionality and Usage of Key Vault - [[https://youtu.be/ZBXVAD4S0Tc&t=7m37s][video]]
** Functionality and Usage of Microsoft Sentinel - [[https://youtu.be/xaqiPXL6tz0&t=9m36s][video]]
** Functionality and Usage of Azure Dedicated Hosts - [[https://youtu.be/RnNqmTH9xok&t=6m49s][video]]
** Concept of Defense in Depth - [[https://youtu.be/CHKS2FcEMek&t=7m17s][video]]
Defense In Depth Strategy: uses multiple layers of security to protect data, ensures that if one layer is breached, others remain intact.
Layers: includes physical security, identity and access, perimeter, network, compute, application, and data layers. Layers have specific roles.

Physical: first line of defense. Protect computing hardware in data-center.
Identity and access: controls access to infrastructure and change control
Perimeter: uses distributed denial of service (DDoS) protection to filter large-scale attacks before they can impact
Network: limits communication between resources (uses segmentation and access control)
Compute: secures access to [[id:61d1153b-3d2a-4e72-babc-1969c1849005][Virtual Machine]]s
Application: ensures that applications are secure and free of vulnerabilities
Data: controls access to business and consumer data
** Describe the Concept of Zero Trust - [[https://youtu.be/JX3w4to-qgo&t=8m13s][video]]
Zero Trust Model: Assumes the worst case scenario. Assumes a breach at the outset, verifies each request as though it originated from an uncontrolled network.

*Guiding Principles*:
- Verify explicitly - always authenticate and authorize based on all available data points
- Use least privilege access - limit user access with 'just in time' and 'just enough access' policies.
- Assume breach - minimize blast radius, segment access, use analytics for threat detection and defense improvement

*Differences from traditional*
traditional models assume safety within corporate networks, while zero trust requires auth for access regardless of location.
Traditional security examines your IP. If you come from a 'trusted IP', you are allowed access. Bad actors have ways of spoofing IP and manipulating their metadata however, so this isn't entirely secure. Zero Trust does not assume that you are allowed to have access, regardless of your source IP - Zero Trust simply means that we verify your identity no matter what.  
** Functionality and Usage of NSGs - [[https://youtu.be/flCoRc1uv9o&t=8m32s][video]]
** Functionality and Usage of Azure Firewall - [[https://youtu.be/1-_cqpUISg4&t=5m2s][video]]
** Functionality and Usage of Azure DDoS Protection - [[https://youtu.be/6cv-wdo9TJw&t=6m30s][video]]

* Describe Identity, Governance, Privacy, and Compliance Features
** Explain Authentication and Authorization - [[https://youtu.be/GA-yNu6aFMk&t=3m52s][video]]
Azure supports multiple auth methods.
Includes passwords, Single Sign On (SSO), Multfactor auth (MFA) and passwordless.
Previously, the thought was that convenience and security were mutually exclusive. New auth methods (supposedly) change that.

*SSO*
- Allows users to sign in once and access multiple resources. Simplifies, prevents a sign on for each resource.

*MFA*
- Enhances security, requires additional methods of identification

*Passwordless*
High security and convenience. Uses methods like "Microsoft hello for business", "Microsoft Auth App", "FIDO2 security keys".

Hello for business is ideal if a user has one business issued PC. Bio-metrics and pin are tied to that PC.
FIDO (Fast Identity Online) helps to promote open auth standards and reduce the use of passwords. These keys are typically an external device, like a USB drive, Bluetooth, or NFC device. 
** Describe Azure External Identities - [[https://youtu.be/G5_z4PFgn2o&t=11m14s][video]]
External Identities: refers to users, devices ,or services outside your organization. Can use their own credentials to sign in, managed by identity provider.
Microsoft Entra External ID: the ways you can securely interact with users outside your organization.
Similar to SSO - allows users to "bring their own sign on"

B2B (Business to Business) Collaboration: Allows external users to sign in using preferred identity for Microsoft and other enterprise applications.
- Direct Connect: Establishes mutual trust with another Entra organization for seamless collaboration (especially in Teams)

Azure AD B2C (Business to Consumer): Manages identity and access for consumer facing apps, allowing users to sign in with social or other identities. 
** Functionality of Conditional Access, MFA and SSO - [[https://youtu.be/DFwERh9Xxk0&t=12m29s][video]]
Conditional Access: a tool in Entra ID that allows/denies access based on identity signals like user identity, location, and device.

Helps IT admins empower users to be productive while protecting assets.
Granular MFA: provides a more detailed MFA, challenges user on unusual sign in signals.
Use Cases: requiring MFA, limiting access to approved applications, restrict access to managed devices, block from untrusted sources. 
** Overview of Microsoft Entra - [[https://youtu.be/bSIF_GjaCmo&t=11m34s][video]]
Entra ID: cloud based identity and access management service. Manages identities for Microsoft cloud applications and on-premises Active Directory.

Includes authentication, single sign-on (SSO), application management, and device management.
Can be connected to onprem Active Directory using Microsoft Entra Connect (consistent identity experience)
Entra Domain Services: Provides managed domain services (domain join, group policy, Kerberos/NTLM auth) without the need to manage domain controllers (simpler).


** Functionality and Usage of RBAC - [[https://youtu.be/0iVyJBG06fM&t=9m19s][video]]

Least Privilege:
- Only grant the access that's necessary to complete a task
Azure RBAC:
- Simplify access management by assigning roles with specific permissions to individuals or groups.

Roles are applied to scopes  (such as [[*Benefits and Usage of Management Groups - \[\[https://youtu.be/bPdDiEtCVhM&t=6m30s\]\[video\]\]][management groups]], [[*Benefits and Usage of Subscriptions - \[\[https://youtu.be/9vKAYW_WkLo&t=8m19s\]\[video\]\]][Subscriptions]], [[*Benefits and Usage of Resource Groups - \[\[https://youtu.be/g6thrYZhPZY&t=9m38s\]\[video\]\]][resource groups]], or single resources), they are hierarchical
RBAC is enforced through Azure resource manager, uses an "allow model" for permissions. This means that Azure RBAC 'allows' you to perform actions within the scope of your role. If you have multiple roles, you inherit the 'allowed' actions for all your roles. 
** Functionality and Usage of Resource Locks - [[https://youtu.be/eF_KilJRxbE&t=6m16s][video]]
Resourec locks prevent the accidental deletion or modification of resources, even with RBAC policies in place.
Type:
- Delete: user can read and modify but can't delete
- ReadOnly: Users can only read, not delete or modify.

  Manage locks via Azure portal, Powershell, Azure CLI, or Azure Resource Manager.
  Can modify locked resources by removing the lock first.
** Functionality and Usage of Tags - [[https://youtu.be/eaf63hE_6SQ&t=5m6s][video]]
Tags: provide metadata about resources. Aid in managing resources, costs, operations, security, governance, and workload
Managing Tags: Can be managed with Powershell, Azure CLI, Azure Resource Manager, REST API, and Azure Portal
Enforcing Tagging Rules: Azure policy can enforce rules and conventions.

Tags consists of a name and a value, can be customized based on resource importance and business needs.
** Functionality and Usage of Azure Policy - [[https://youtu.be/z7WMqHE3R8g&t=10m50s][video]]
Azure Policy helps ensure resources stay compliant with corporate standards by creating, assigning, and managing policies.
Policies can be defined individually or as groups (initiatives) and can be applied at various levels (resource, resource group, subscription)

Includes built-in definitions for storage, networking, compute, security center, and monitoring.
Can automatically remediate non-compliant resources and integrates with Azure DevOps for continuous integration and delivery.
** Purpose of Microsoft Purview - [[https://youtu.be/mXjXcBr1ajY&t=10m47s][video]]
Microsoft Purview provides data governance, risk, and compliance solutions to offer a unified view of your data across onprem, multicloud, SaaS.
Helps protect sensitive data, identify risks, and manage regulatory compliance (Microsoft 365 services)
Manages data across a variety of platforms (Azure SQL, Hive, Amazon S3, etc) enabling data classification, end-to-end lineage, and secure data access.

Includes automated data discovery, sensitive data classification, and insights into data storage and use. 
** Governance Hierarchy Constructs - [[https://youtu.be/ge8r_Z0LKxM&t=6m13s][video]]
** Functionality and Usage of Azure Blueprints - [[https://youtu.be/SJbDcvkySCY&t=5m22s][video]]
** Describe Cloud Adoption Framework - [[https://youtu.be/VHQxbIynlN4&t=2m3s][video]]
** Describe Microsoft Privacy Statement, OST and DPA - [[https://youtu.be/5mqroH3E3gw&t=3m28s][video]]
** Purpose of Trust Center and Azure Compliance Documentation - [[https://youtu.be/QkVlogulVX4&t=5m42s][video]]
Microsoft service trust portal provides access to content, tools, and resources about Microsoft's security, privacy, and noncompliance practices.
Users must sign in with a MS cloud account and accept an NDA to access resources.

Contains sensitive info about MS's implementation of controls and processes that protect cloud services, and customer data. 
** Purpose of Azure Sovereign Regions - [[https://youtu.be/PdAEPAnT2uI&t=5m15s][video]]

* Describe Azure Cost Management and Service Level Agreements
** Factors That Affect Costs - [[https://youtu.be/fMShW_RGcxY&t=6m32s][video]]
- Resource Type - costs vary based on the type of azure resource, settings, and the region they are deployed.
- Consumption - pay-as-you-go, potential discounts for committing to resource usage
- Subscription type
- Geography - costs differ by region (labor, taxes, fees, etc)
** Factors to Reduce Cost - [[https://youtu.be/B5yiKE2DLH8&t=15m29s][video]]
** Functionality and Usage of Pricing and TCO Calculators - [[https://youtu.be/pE-bf8i5blU&t=7m26s][video]]
Pricing Calculator: estimates the cost of provisioning resources in Azure. Includes compute, storage, network. Can estimate individual resources, or total cost.

TCO Calculator: Compares costs of running onprem vs Azure. Includes factors like servers, databases, storage, and IT costs.

Purpose: Pricing calculator focuses on the cost of provisioned resources, while TCO compares current infrastructure cost with potential Azure cost. 
** Functionality and Usage of Azure Cost Management - [[https://youtu.be/FoBjC9CAF08&t=5m48s][video]]
Cost Management: Helps monitor and manage Azure resource costs, create alerts, and set budgets
Cost Analysis: Provides visual tools to explore/analyze costs by billing cycle, region, resource, etc
Cost Alerts: Includes budget alerts, credit alerts, department spending quota alerts
Budgets: allows setting spending limits and automating resource management based on budget conditions
** Purpose of Service Level Agreements - [[https://youtu.be/3QIVbgnNrR0&t=13m42s][video]]
** Describe Service Lifecycle in Azure - [[https://youtu.be/NJ9-S7C0pY4&t=7m0s][video]]




#  LocalWords:  deprovision stateful ExpressRoute CloudExchange LRS
#  LocalWords:  AzCopy onprem Entra auth NTLM Kerberos SSO Multfactor
#  LocalWords:  passwordless RBAC PAAS CSPM DevOps Powershell SaaS
#  LocalWords:  multicloud NDA
