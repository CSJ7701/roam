:PROPERTIES:
:ID:       5505e99b-f627-43a0-8e7a-3181ed3a0628
:END:
#+title: Circular Convolution
#+filetags: :DSP:

Ex.
let $x_{1}(n)={1,2,3,4}$ origin at 1.
let $x_{2}(n)={4,3,2,1}$ origin at 4.

Find circular convolution of x1 nad x2.

In time:
$x_{3}(n)=\sum^{N-1}_{n=0}X_{1}(n)X_{2}((m-n))_{N}$

$X(0)=\sum_{n=0}^{3}X_{1}(n)X_{2}(-n)_{4}=X_{1}(0)*X_{2}(0)_{4}+X_{1}(1)X_{2}(-1)_{4}+X_{1}(2)X_{2}(-2)_{4}+x_{1}(3)X_{2}(-3)_{4}$
$X(0)=(1*4)+(2*1)+(3*2)+(4*3)=24$

$x(1)=\sum_{n=0}^{3}x_{1}(n)x_{2}(1-n)_{4}=x_{1}(0)x_{2}(1)_{4}+x_{1}(1)x_{2}(0)_{4}+x_{1}(2)x_{2}(-1)_{4}+x_{1}(3)x_{2}(-2)_{4}$
$x(1)=(1*3)+(2*4)+(3*1)+(4*2)=22$
The key to circular convolution is the fact that you can choose the length of the result. So if you take the 8 point circular convolution, your result will be 8 points. If you choose a value that is too low, you will end up with an aliased result.

Choosing N, N should be greater than equal to L+M-1, where L and M are the lengths of the signals.

Similar to how regular [[id:4f60c4a9-3084-4381-9f47-9f84f0df21bd][Convolution]] is multiplication in the [[id:a91397bf-197b-479f-848a-21a918d8cdc3][Z Transforms]] domain, circular convolution is just multiplication in the Frequency Domain - which we can reach using the [[id:4ebb0211-c2a8-4e7e-840f-0d125afdbbeb][Fourier Series]] representation, or [[id:f9208e13-6c4c-4992-82bb-2e1a87e01040][Discrete Time Fourier Transform]].
The circular convolution of 2 finite length sequences is the same as the periodic convolution of the sequences' periodic equivalents.

Example.

Perform the 4 point circular convolution of the two signals below:
#+ATTR_LATEX: :caption \bicaption{---}
[[file:/home/csj7701/roam/Attachments/DSP-4-2.png]]

The 4 point circular convolution is:
$y(n)=[\sum_{k=0}^{3}h(n-k)x(k)]R_{4}(n)$

at n=0, we have $y(0)=\sum_{k=0}^{3}h(-k)x(k)$
below we have a graph of $h(-k)R_{4}(k)$:
#+ATTR_LATEX: :caption \bicaption{---}
[[file:/home/csj7701/roam/Attachments/DSP-4-3.png]]

In order to find y(0), we multiply this sequence by x(k) and sum the product from k=0, to k=3.
We get y(0)=1.

Next we evaluate the sum $y(1)=\sum_{k=0}^{3}h(1-k)x(k)$ where this is the plot of $h(1-k)R_{4}(n)$:
#+ATTR_LATEX: :caption \bicaption{---}
[[file:/home/csj7701/roam/Attachments/DSP-4-4.png]]

Multiplying by x(k) and again summing from k=0 to k=3, we find y(1)=4. Repeating for n=2 and n=3, we get y(2)=2, y(3)=2.
$\therefore y(n)=\delta(n)+4\edlta(n-1)+2\delta(n-2)+2\delta(n-3)$

Another (likely simpler) way to perform circular convolution is to find the [[id:43b1bd5b-5ab0-4191-8cec-1ab2db013fa2][Discrete Fourier Transform]] of each sequence, multiply, and take the inverse Discrete Fourier Transform. 
